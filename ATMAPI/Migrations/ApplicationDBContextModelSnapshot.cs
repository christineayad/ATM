// <auto-generated />
using System;
using ATMAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATMAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ATMAPI.Model.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OperationName = "Register"
                        },
                        new
                        {
                            Id = 2,
                            OperationName = "Login"
                        },
                        new
                        {
                            Id = 3,
                            OperationName = "CheckBalance"
                        },
                        new
                        {
                            Id = 4,
                            OperationName = "Deposit"
                        },
                        new
                        {
                            Id = 5,
                            OperationName = "Withdraw"
                        },
                        new
                        {
                            Id = 6,
                            OperationName = "TransferMoney"
                        },
                        new
                        {
                            Id = 7,
                            OperationName = "RecieveMoney"
                        },
                        new
                        {
                            Id = 8,
                            OperationName = "RemoveUser"
                        },
                        new
                        {
                            Id = 9,
                            OperationName = "LogOut"
                        });
                });

            modelBuilder.Entity("ATMAPI.Model.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleteTransfer")
                        .HasColumnType("bit");

                    b.Property<decimal>("OperationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OperationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OperationId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<decimal>("UserBalanceAfterOperation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UserBalanceBeforeOperation")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ATMAPI.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Currentbalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("UserCategoryId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ATMAPI.Model.UserCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ordinary"
                        });
                });

            modelBuilder.Entity("ATMAPI.Model.UserOperationHestory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OperationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OperationId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationHestories");
                });

            modelBuilder.Entity("ATMAPI.Model.UserTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTransactions");
                });

            modelBuilder.Entity("ATMAPI.Model.Transaction", b =>
                {
                    b.HasOne("ATMAPI.Model.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("ATMAPI.Model.User", b =>
                {
                    b.HasOne("ATMAPI.Model.UserCategory", "usercategory")
                        .WithMany("Users")
                        .HasForeignKey("UserCategoryId");

                    b.Navigation("usercategory");
                });

            modelBuilder.Entity("ATMAPI.Model.UserOperationHestory", b =>
                {
                    b.HasOne("ATMAPI.Model.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId");

                    b.HasOne("ATMAPI.Model.User", "User")
                        .WithMany("UserOperationHistories")
                        .HasForeignKey("UserId");

                    b.Navigation("Operation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ATMAPI.Model.UserTransaction", b =>
                {
                    b.HasOne("ATMAPI.Model.Transaction", "Transaction")
                        .WithMany("userTransactions")
                        .HasForeignKey("TransactionId");

                    b.HasOne("ATMAPI.Model.User", "User")
                        .WithMany("userTransactions")
                        .HasForeignKey("UserId");

                    b.Navigation("Transaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ATMAPI.Model.Transaction", b =>
                {
                    b.Navigation("userTransactions");
                });

            modelBuilder.Entity("ATMAPI.Model.User", b =>
                {
                    b.Navigation("UserOperationHistories");

                    b.Navigation("userTransactions");
                });

            modelBuilder.Entity("ATMAPI.Model.UserCategory", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
